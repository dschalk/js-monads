'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { return { powerAssertContext: { value: value, events: this.captured }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _jsMonads = require('js-monads');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mM1 = new _jsMonads.Monad(0, 'mM1');
var a = mM1.ret(0).bnd(add, 3).bnd(cube);
var b = mM1.ret(0).bnd(function (v) {
    return add(v, 3).bnd(cube);
});

(0, _ava2.default)(function (t) {
    var _rec = new _powerAssertRecorder(),
        _rec2 = new _powerAssertRecorder();

    t.deepEqual(_rec._expr(_rec._capt(a, 'arguments/0'), {
        content: 't.deepEqual(a, b)',
        filepath: 'test/index.js',
        line: 8
    }), _rec2._expr(_rec2._capt(b, 'arguments/1'), {
        content: 't.deepEqual(a, b)',
        filepath: 'test/index.js',
        line: 8
    }));
});
//# sourceMappingURL=../node_modules/.cache/ava/bbd0bdf1b07b09e2bd799a1b762b519d.js.map